#!/usr/bin/env node

var nopt = require('nopt');

var run = require('plumber').run;
var execute = require('plumber').execute;

var cwd = process.cwd();
var spec = require(cwd + '/Pipeline.js');

var pipelines = {};

spec(pipelines);

var cli = nopt({watch: Boolean}, {w: '--watch'}, process.argv, 2);

var pipelineArgs = cli.argv.remain;
if (pipelineArgs.length === 0) {
    // Run all pipelines
    pipelineArgs = Object.keys(pipelines);
}

pipelineArgs.forEach(function(pipelineArg) {
    var pipeline = pipelines[pipelineArg];
    if (! pipeline) {
        throw new Error('Pipeline not defined: ' + pipelineArg);
    }

    console.log("Run pipeline: " + pipelineArg);

    var finalStep = run(pipeline);

    // Report errors if any
    var output = finalStep.output();
    output.catch(function(err) {
        console.log("Luigi failed: ", err.stack);
    });

    if (cli.watch) {
        output.then(function() {
            // FIXME: gaze is still observing, more and more!
            function monitor() {
                return finalStep.monitor().then(function() {
                    console.log("Re-run pipeline: " + pipelineArg);
                    // finalStep.output().catch(function(err) {
                    finalStep.output().then(function() {
                        console.log("done", arguments)
                    }).catch(function(err) {
                        console.log("Luigi failed: ", err.stack);
                    });
                }).then(monitor);
            }

            console.log(finalStep)

            monitor();
        });
    }
});
